{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Listing/Categories.jsx","webpack:///./src/components/Listing/Listing.jsx","webpack:///./src/components/Listing/ListItem.jsx","webpack:///./src/components/Listing/index.js","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/SEO/Facebook.jsx","webpack:///./src/components/SEO/Twitter.jsx","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Footer.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/slices/BodyText.jsx","webpack:///./src/slices/CodeBlock.jsx","webpack:///./src/slices/Image.jsx","webpack:///./src/slices/Quote.jsx","webpack:///./src/styles/prism.js","webpack:///./src/styles/theme.js","webpack:///./src/styles/reset.js","webpack:///./src/components/SliceZone.jsx","webpack:///./src/components/Title.jsx","webpack:///./src/components/Layout.jsx","webpack:///./src/components/Wrapper.jsx","webpack:///./src/components/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","Categories","categories","this","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","a","Fragment","map","cat","i","key","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","kebabCase","Component","array","List","styled_base_browser_esm","target","name","styles","Listing","posts","core_browser_esm","post","node","category","c","document","ListItem_ListItem","uid","Item","Headline","theme","colors","grey","StyledLink","Link","black","breakpoints","s","ListItem","_this$props","date","title","text","SEO","desc","banner","pathname","article","gatsby_browser_entry","_ref","_ref$site","site","buildTime","_ref$site$siteMetadat","siteMetadata","defaultTitle","titleAlt","shortName","author","siteLanguage","logo","siteUrl","pathPrefix","defaultDescription","defaultBanner","twitter","seo","description","image","url","schemaOrgJSONLD","@context","@type","@id","alternateName","headline","datePublished","dateModified","publisher","isPartOf","mainEntityOfPage","react_default","Helmet_default","lang","content","type","JSON","stringify","SEO_Facebook","SEO_Twitter","username","_2288919696","bool","defaultProps","Facebook","property","Twitter","StyledFooter","maxWidth","Footer","StyledHeader","invert","greyLight","greyDark","Header","Content","maxWidthText","BodyText","input","dangerouslySetInnerHTML","__html","primary","html","CodeBlock","CodeBlock_Content","code_block","Image","Image_Content","gatsby_image_default","fluid","localFile","childImageSharp","BlockQuote","Quote","quote","prism","bg","greyBlue","greyDarker","xs","m","l","reset","SliceZone","slice","allSlices","slice_type","slices_BodyText","id","slices_CodeBlock","slices_Image","slices_Quote","SliceZone_Content","Title","emotion_esm","PureLayout","emotion_theming_browser_esm","components_SEO","components_Footer","prismicHomepage","footer","Layout","_this","Layout_PureLayout","extends_default","_294605592","oneOfType","Wrapper","__webpack_require__","d","__webpack_exports__","components_Layout","components_Listing","components_Wrapper","SliceZone_SliceZone","components_Title","components_Header","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"2qBAYA,IAAMA,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvBC,OAAAC,EAAA,IAAAD,CAACL,EAAmBO,SAApB,KACG,SAAAC,GACC,OACEJ,EAAMK,MACLD,EAAgBJ,EAAMM,QAAUF,EAAgBJ,EAAMM,OAAOD,MAEtDL,EAAMO,QAAUP,EAAMQ,UAC5BR,EAAMK,KAAOL,EAAMK,KAAKA,KAAOD,EAAgBJ,EAAMM,OAAOD,MAGvDJ,OAAAC,EAAA,IAAAD,CAAA,uCAaf,SAASQ,IACP,MAAM,IAAIC,MACR,gVATJX,EAAYY,UAAY,CACtBN,KAAMO,IAAUC,OAChBP,MAAOM,IAAUE,OAAOC,WACxBR,OAAQK,IAAUI,KAClBR,SAAUI,IAAUI,8JC9BDC,4FACnBV,kBAAS,IACCW,EAAeC,KAAKnB,MAApBkB,WACR,OACEjB,OAAAmB,EAAA,IAAAnB,CAAAoB,EAAAC,EAAAC,SAAA,KACGL,EAAWM,IAAI,SAACC,EAAKC,GAAN,OACdzB,OAAAmB,EAAA,IAAAnB,CAACoB,EAAAC,EAAMC,SAAP,CAAgBI,IAAKF,KAChBC,GAAK,KACRzB,OAAAmB,EAAA,IAAAnB,CAAC2B,EAAA,KAAD,CAAMC,GAAE,eAAiBC,IAAUL,IAASA,WARhBM,aAgBxCd,EAAWN,UAAY,CACrBO,WAAYN,IAAUoB,MAAMjB,oICjBxBkB,EAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,MAAHkC,OAAA,YAAGlC,CAAH,CAAAmC,KAAA,UAAAC,OAAA,2EAOWC,4FACnB/B,kBAAS,IACCgC,EAAUpB,KAAKnB,MAAfuC,MACR,OACEtC,OAAAuC,EAAA,IAAAvC,CAACgC,EAAD,KACGM,EAAMf,IAAI,SAAAiB,GACT,IAAIvB,GAAa,EAIjB,OAHIuB,EAAKC,KAAKrC,KAAKa,WAAW,GAAGyB,WAC/BzB,EAAauB,EAAKC,KAAKrC,KAAKa,WAAWM,IAAI,SAAAoB,GAAC,OAAIA,EAAED,SAASE,SAAS,GAAGxC,KAAK+B,QAEvEnC,OAAAuC,EAAA,IAAAvC,CAAC6C,EAAD,CAAUnB,IAAKc,EAAKC,KAAKK,IAAKL,KAAMD,EAAKC,KAAMxB,WAAYA,WAVvCa,aAiBrCO,EAAQ3B,UAAY,CAClB4B,MAAO3B,IAAUoB,MAAMjB,yBCxBnBiC,EAAO/C,OAAAiC,EAAA,EAAAjC,CAAA,MAAHkC,OAAA,aAAGlC,CAAH,CAAAmC,KAAA,SAAAC,OAAA,2BAIJY,EAAWhD,OAAAiC,EAAA,EAAAjC,CAAA,KAAHkC,OAAA,aAAGlC,CAAH,oLAGH,SAAAD,GAAK,OAAIA,EAAMkD,MAAMC,OAAOC,MAHzB,4BAMD,SAAApD,GAAK,OAAIA,EAAMkD,MAAMC,OAAOC,MAN3B,2CAYRC,EAAapD,OAAAiC,EAAA,EAAAjC,CAAOqD,OAAP,CAAAnB,OAAA,aAAAlC,CAAH,4BAEL,SAAAD,GAAK,OAAIA,EAAMkD,MAAMC,OAAOI,OAFvB,wCAIO,SAAAvD,GAAK,OAAIA,EAAMkD,MAAMM,YAAYC,GAJxC,0BASKC,4FACnBnD,kBAAS,IAAAoD,EACsBxC,KAAKnB,MAA1B0C,EADDiB,EACCjB,KAAMxB,EADPyC,EACOzC,WACd,OACEjB,OAAAuC,EAAA,IAAAvC,CAAC+C,EAAD,KACE/C,OAAAuC,EAAA,IAAAvC,CAACgD,EAAD,KACGP,EAAKrC,KAAKuD,KADb,MACsB1C,GAAcjB,OAAAuC,EAAA,IAAAvC,CAACgB,EAAA,EAAD,CAAYC,WAAYA,KAE5DjB,OAAAuC,EAAA,IAAAvC,CAACoD,EAAD,CAAYxB,GAAIa,EAAKK,KAAML,EAAKrC,KAAKwD,MAAMC,WARb/B,aActC2B,EAAS/C,UAAY,CACnB+B,KAAM9B,IAAUC,OAAOE,WACvBG,WAAYN,IAAUoB,MAAMjB,YCzCfuB,mCCEMyB,4FACnBxD,kBAAS,IAAAoD,EAC4CxC,KAAKnB,MAAhD6D,EADDF,EACCE,MAAOG,EADRL,EACQK,KAAMC,EADdN,EACcM,OAAQC,EADtBP,EACsBO,SAAUC,EADhCR,EACgCQ,QACvC,OACElE,OAAAuC,EAAA,IAAAvC,CAACmE,EAAA,YAAD,CACE9D,MAAOA,EACPC,OAAQ,SAAA8D,GAiBF,IAAAC,EAAAD,EAhBJE,KACEC,EAeEF,EAfFE,UAeEC,EAAAH,EAdFI,aACEC,EAaAF,EAbAE,aACAC,EAYAH,EAZAG,SACAC,EAWAJ,EAXAI,UACAC,EAUAL,EAVAK,OACAC,EASAN,EATAM,aACAC,EAQAP,EARAO,KACAC,EAOAR,EAPAQ,QACAC,EAMAT,EANAS,WACAC,EAKAV,EALAU,mBACAC,EAIAX,EAJAW,cACAC,EAGAZ,EAHAY,QAIEC,EAAM,CACVzB,MAAOA,GAASc,EAChBY,YAAaJ,GAAsBnB,EACnCwB,MAAK,GAAKP,GAAUhB,GAAUmB,GAC9BK,IAAG,GAAKR,GAAUf,GAAY,MAK5BwB,EAAkB,CACpB,CACEC,WAAY,oBACZC,QAAS,UACTC,MAAOZ,EACPQ,IAAKR,EACL7C,KAAMuC,EACNmB,cAAelB,GAAY,KA0C/B,OAtCIT,IACFuB,EAAkB,CAChB,CACEC,WAAY,oBACZC,QAAS,cACTC,MAAOP,EAAIG,IACXA,IAAKH,EAAIG,IACTrD,KAAMyB,EACNiC,cAAelB,GAAY,GAC3BmB,SAAUlC,EACV2B,MAAO,CACLI,QAAS,cACTH,IAAKH,EAAIE,OAEXD,YAAaD,EAAIC,YACjBS,cAAexB,EACfyB,aAAczB,EACdM,OAAQ,CACNc,QAAS,SACTxD,KAAM0C,GAERoB,UAAW,CACTN,QAAS,eACTxD,KAAM0C,EACNE,KAAM,CACJY,QAAS,cACTH,IAAKR,GAvCmB,MAAfC,EAAqB,GAAKA,GAuCPF,IAGhCmB,SAAUlB,EACVmB,iBAAkB,CAChBR,QAAS,UACTC,MAAOZ,MAObhF,OAAAuC,EAAA,IAAAvC,CAAAoG,EAAA/E,EAAAC,SAAA,KACEtB,OAAAuC,EAAA,IAAAvC,CAACqG,EAAAhF,EAAD,CAAQuC,MAAOyB,EAAIzB,OACjB5D,OAAAuC,EAAA,IAAAvC,CAAA,QAAMsG,KAAMxB,IACZ9E,OAAAuC,EAAA,IAAAvC,CAAA,QAAMmC,KAAK,cAAcoE,QAASlB,EAAIC,cACtCtF,OAAAuC,EAAA,IAAAvC,CAAA,QAAMmC,KAAK,QAAQoE,QAASlB,EAAIE,QAChCvF,OAAAuC,EAAA,IAAAvC,CAAA,QAAMmC,KAAK,6BAA6BoE,QAAS3B,IACjD5E,OAAAuC,EAAA,IAAAvC,CAAA,QAAMmC,KAAK,mBAAmBoE,QAAS3B,IACvC5E,OAAAuC,EAAA,IAAAvC,CAAA,UAAQwG,KAAK,uBAAuBC,KAAKC,UAAUjB,KAErDzF,OAAAuC,EAAA,IAAAvC,CAAC2G,EAAD,CACE5C,KAAMsB,EAAIC,YACVC,MAAOF,EAAIE,MACX3B,MAAOyB,EAAIzB,MACX4C,KAAMtC,EAAU,UAAY,KAC5BsB,IAAKH,EAAIG,MAEXxF,OAAAuC,EAAA,IAAAvC,CAAC4G,EAAD,CAAShD,MAAOyB,EAAIzB,MAAO2B,MAAOF,EAAIE,MAAOxB,KAAMsB,EAAIC,YAAauB,SAAUzB,MA/FtFhF,KAAA0G,QAJ2BhF,aA4GjCgC,EAAIpD,UAAY,CACdkD,MAAOjD,IAAUE,OACjBkD,KAAMpD,IAAUE,OAChBmD,OAAQrD,IAAUE,OAClBoD,SAAUtD,IAAUE,OACpBqD,QAASvD,IAAUoG,MAGrBjD,EAAIkD,aAAe,CACjBpD,MAAO,KACPG,KAAM,KACNC,OAAQ,KACRC,SAAU,KACVC,SAAS,GAGX,IAAM7D,EAAK,aChIL4G,EAAW,SAAA7C,GAAA,IAAGoB,EAAHpB,EAAGoB,IAAKgB,EAARpC,EAAQoC,KAAM5C,EAAdQ,EAAcR,MAAOG,EAArBK,EAAqBL,KAAMwB,EAA3BnB,EAA2BmB,MAA3B,OACfvF,OAAAuC,EAAA,IAAAvC,CAACqG,EAAAhF,EAAD,KACGmE,GAAOxF,OAAAuC,EAAA,IAAAvC,CAAA,QAAMkH,SAAS,SAASX,QAASf,IACxCgB,GAAQxG,OAAAuC,EAAA,IAAAvC,CAAA,QAAMkH,SAAS,UAAUX,QAASC,IAC1C5C,GAAS5D,OAAAuC,EAAA,IAAAvC,CAAA,QAAMkH,SAAS,WAAWX,QAAS3C,IAC5CG,GAAQ/D,OAAAuC,EAAA,IAAAvC,CAAA,QAAMkH,SAAS,iBAAiBX,QAASxC,IACjDwB,GAASvF,OAAAuC,EAAA,IAAAvC,CAAA,QAAMkH,SAAS,WAAWX,QAAShB,MAIlC0B,IAEfA,EAASvG,UAAY,CACnB8E,IAAK7E,IAAUE,OACf2F,KAAM7F,IAAUE,OAChB+C,MAAOjD,IAAUE,OACjBkD,KAAMpD,IAAUE,OAChB0E,MAAO5E,IAAUE,QAGnBoG,EAASD,aAAe,CACtBxB,IAAK,KACLgB,KAAM,KACN5C,MAAO,KACPG,KAAM,KACNwB,MAAO,MCzBT,IAAM4B,EAAU,SAAA/C,GAAA,IAAGoC,EAAHpC,EAAGoC,KAAMK,EAATzC,EAASyC,SAAUjD,EAAnBQ,EAAmBR,MAAOG,EAA1BK,EAA0BL,KAAMwB,EAAhCnB,EAAgCmB,MAAhC,OACdvF,OAAAuC,EAAA,IAAAvC,CAACqG,EAAAhF,EAAD,KACErB,OAAAuC,EAAA,IAAAvC,CAAA,QAAMmC,KAAK,eAAeoE,QAASC,IAClCK,GAAY7G,OAAAuC,EAAA,IAAAvC,CAAA,QAAMmC,KAAK,kBAAkBoE,QAASM,IAClDjD,GAAS5D,OAAAuC,EAAA,IAAAvC,CAAA,QAAMmC,KAAK,gBAAgBoE,QAAS3C,IAC7CG,GAAQ/D,OAAAuC,EAAA,IAAAvC,CAAA,QAAMmC,KAAK,sBAAsBoE,QAASxC,IAClDwB,GAASvF,OAAAuC,EAAA,IAAAvC,CAAA,QAAMmC,KAAK,gBAAgBoE,QAAShB,MAInC4B,IAEfA,EAAQzG,UAAY,CAClB8F,KAAM7F,IAAUE,OAChBgG,SAAUlG,IAAUE,OACpB+C,MAAOjD,IAAUE,OACjBkD,KAAMpD,IAAUE,OAChB0E,MAAO5E,IAAUE,QAGnBsG,EAAQH,aAAe,CACrBR,KAAM,sBACNK,SAAU,KACVjD,MAAO,KACPG,KAAM,KACNwB,MAAO,MCvBMzB,QCFTsD,EAAepH,OAAAiC,EAAA,EAAAjC,CAAA,UAAHkC,OAAA,YAAGlC,CAAH,aACH,SAAAD,GAAK,OAAIA,EAAMkD,MAAMoE,UADlB,+CAIP,SAAAtH,GAAK,OAAIA,EAAMkD,MAAMC,OAAOC,MAJrB,KAOZmE,4FACJhH,kBAAS,IACCC,EAAaW,KAAKnB,MAAlBQ,SACR,OAAOP,OAAAuC,EAAA,IAAAvC,CAACoH,EAAD,KAAe7G,OAHLuB,aAONwF,IAEfA,EAAO5G,UAAY,CACjBH,SAAUI,IAAU8B,KAAK3B,YChB3B,IAAMyG,EAAevH,OAAAiC,EAAA,EAAAjC,CAAA,UAAHkC,OAAA,aAAGlC,CAAH,+BAGL,SAAAD,GAAK,OAAKA,EAAMyH,OAASzH,EAAMkD,MAAMC,OAAOuE,UAAY1H,EAAMkD,MAAMC,OAAOwE,UAHtE,mNAWZC,4FACJrH,kBAAS,IACCkH,EAAWtG,KAAKnB,MAAhByH,OACR,OACExH,OAAAuC,EAAA,IAAAvC,CAACuH,EAAD,CAAcC,OAAQA,GACpBxH,OAAAuC,EAAA,IAAAvC,CAACmE,EAAA,KAAD,CAAMvC,GAAG,KAAT,iBALaE,aAWN6F,IAEfA,EAAOjH,UAAY,CACjB8G,OAAQ7G,IAAUoG,MAGpBY,EAAOX,aAAe,CACpBQ,QAAQ,GC9BV,IAAMI,EAAU5H,OAAAiC,EAAA,EAAAjC,CAAA,OAAHkC,OAAA,YAAGlC,CAAH,aACE,SAAAD,GAAK,OAAIA,EAAMkD,MAAM4E,cADvB,KAIPC,EAAW,SAAA1D,GAAA,IAAG2D,EAAH3D,EAAG2D,MAAH,OAAe/H,OAAAuC,EAAA,IAAAvC,CAAC4H,EAAD,CAASI,wBAAyB,CAAEC,OAAQF,EAAMG,QAAQrE,KAAKsE,SAEhFL,IAEfA,EAASpH,UAAY,CACnBqH,MAAOpH,IAAUC,OAAOE,YCT1B,IAAM8G,EAAU5H,OAAAiC,EAAA,EAAAjC,CAAA,OAAHkC,OAAA,aAAGlC,CAAH,iCAEE,SAAAD,GAAK,OAAIA,EAAMkD,MAAM4E,cAFvB,KAKPO,EAAY,SAAAhE,GAAA,IAAG2D,EAAH3D,EAAG2D,MAAH,OAAe/H,OAAAuC,EAAA,IAAAvC,CAACqI,EAAD,CAASL,wBAAyB,CAAEC,OAAQF,EAAMG,QAAQI,WAAWH,SAEvFC,IAEfA,EAAU1H,UAAY,CACpBqH,MAAOpH,IAAUC,OAAOE,kCCTpB8G,EAAU5H,OAAAiC,EAAA,EAAAjC,CAAA,OAAHkC,OAAA,aAAGlC,CAAH,CAAAmC,KAAA,SAAAC,OAAA,8CAKPmG,EAAQ,SAAAnE,GAAA,IAAG2D,EAAH3D,EAAG2D,MAAH,OACZ/H,OAAAuC,EAAA,IAAAvC,CAACwI,EAAD,KACExI,OAAAuC,EAAA,IAAAvC,CAACyI,EAAApH,EAAD,CAAKqH,MAAOX,EAAMG,QAAQ3C,MAAMoD,UAAUC,gBAAgBF,UAI/CH,IAEfA,EAAM7H,UAAY,CAChBqH,MAAOpH,IAAUC,OAAOE,YCf1B,IAAM+H,EAAa7I,OAAAiC,EAAA,EAAAjC,CAAA,cAAHkC,OAAA,YAAGlC,CAAH,aACD,SAAAD,GAAK,OAAIA,EAAMkD,MAAM4E,cADpB,KAIViB,EAAQ,SAAA1E,GAAA,IAAG2D,EAAH3D,EAAG2D,MAAH,OACZ/H,OAAAuC,EAAA,IAAAvC,CAAC6I,EAAD,KACE7I,OAAAuC,EAAA,IAAAvC,CAAA,OAAKgI,wBAAyB,CAAEC,OAAQF,EAAMG,QAAQa,MAAMZ,UAIjDW,IAEfA,EAAMpI,UAAY,CAChBqH,MAAOpH,IAAUC,OAAOE,sBCgJXkI,EA/JD,CAAH7G,KAAA,SAAAC,OAAA,ukECmBIa,EArBD,CACZC,OAAQ,CACNgF,QAAS,UACTe,GAAI,OACJ3F,MAAO,OACPmE,UAAW,UACXyB,SAAU,UACV/F,KAAM,UACNuE,SAAU,UACVyB,WAAY,WAEd9B,SAAU,SACVQ,aAAc,QACdtE,YAAa,CACX6F,GAAI,QACJ5F,EAAG,QACH6F,EAAG,QACHC,EAAG,WC4FQC,EA3GD,CAAHpH,KAAA,SAAAC,OAAA,wvCCILwF,EAAU5H,OAAAiC,EAAA,EAAAjC,CAAA,OAAHkC,OAAA,YAAGlC,CACZgJ,EADS,wPAkBgB,SAAAjJ,GAAK,OAAIA,EAAMkD,MAAMC,OAAOgF,SAlB5C,0CA0BQsB,6FACnBlJ,kBAAS,IAEDmJ,EADgBvI,KAAKnB,MAAnB2J,UACgBnI,IAAI,SAAAiC,GAC1B,OAAQA,EAAEmG,YAER,IAAK,OACH,OAAO3J,OAAAuC,EAAA,IAAAvC,CAAC4J,EAAD,CAAUlI,IAAK8B,EAAEqG,GAAI9B,MAAOvE,IACrC,IAAK,aACH,OAAOxD,OAAAuC,EAAA,IAAAvC,CAAC8J,EAAD,CAAWpI,IAAK8B,EAAEqG,GAAI9B,MAAOvE,IACtC,IAAK,QACH,OAAOxD,OAAAuC,EAAA,IAAAvC,CAAC+J,EAAD,CAAOrI,IAAK8B,EAAEqG,GAAI9B,MAAOvE,IAClC,IAAK,QACH,OAAOxD,OAAAuC,EAAA,IAAAvC,CAACgK,EAAD,CAAOtI,IAAK8B,EAAEqG,GAAI9B,MAAOvE,IAClC,QACE,OAAO,QAGb,OAAOxD,OAAAuC,EAAA,IAAAvC,CAACiK,EAAD,KAAUR,OAlBkB3H,aAsBvC0H,GAAU9I,UAAY,CACpBgJ,UAAW/I,IAAUoB,MAAMjB,YCrD7B,IA4BeoJ,GA5BDlK,OAAAiC,EAAA,EAAAjC,CAAA,KAAHkC,OAAA,YAAGlC,CAAH,sHAQa,SAAAD,GAAK,OAAIA,EAAMkD,MAAMC,OAAOC,MARzC,iFAcY,SAAApD,GAAK,OAAIA,EAAMkD,MAAMM,YAAY+F,GAd7C,0DAoBY,SAAAvJ,GAAK,OAAIA,EAAMkD,MAAMM,YAAY8F,GApB7C,wGCUXrJ,OAAAmK,GAAA,aAAAnK,CACIuJ,EADJ,4BAGatG,EAAMC,OAAOI,MAH1B,2FAUaL,EAAMC,OAAOiG,WAV1B,qBAWwBlG,EAAMC,OAAO+F,GAXrC,uBAcahG,EAAMC,OAAO+F,GAd1B,qBAewBhG,EAAMC,OAAOgF,QAfrC,aAkBajF,EAAMC,OAAOgF,QAlB1B,yJA2BuBjF,EAAMM,YAAY8F,EA3BzC,wDAgCuBpG,EAAMM,YAAYC,EAhCzC,8MAsDA,IAAM4G,GAAa,SAAAhG,GAAA,IAAG7D,EAAH6D,EAAG7D,SAAUH,EAAbgE,EAAahE,KAAb,OACjBJ,OAAAuC,EAAA,IAAAvC,CAACqK,GAAA,EAAD,CAAepH,MAAOA,GACpBjD,OAAAuC,EAAA,IAAAvC,CAAAoG,EAAA/E,EAAAC,SAAA,KACEtB,OAAAuC,EAAA,IAAAvC,CAACsK,EAAD,MACC/J,EACDP,OAAAuC,EAAA,IAAAvC,CAACuK,EAAD,KACEvK,OAAAuC,EAAA,IAAAvC,CAAA,OAAKgI,wBAAyB,CAAEC,OAAQ7H,EAAKoK,gBAAgBpK,KAAKqK,OAAOtC,YA2BlEuC,6FApBbpK,kBAAS,IAAAqK,EAAAzJ,KACP,OACElB,OAAAuC,EAAA,IAAAvC,CAACmE,EAAA,YAAD,CACE9D,MAAK,YAWLC,OAAQ,SAAAF,GAAI,OAAIJ,OAAAuC,EAAA,IAAAvC,CAAC4K,GAADC,KAAA,GAAgBF,EAAK5K,MAArB,CAA4BK,KAAMA,MAZpDA,KAAA0K,SAHehJ,aAuBrBsI,GAAW1J,UAAY,CACrBH,SAAUI,IAAUoK,UAAU,CAACpK,IAAUoB,MAAOpB,IAAU8B,OAAO3B,WACjEV,KAAMO,IAAUC,OAAOE,YCrGzB,IASekK,GATChL,OAAAiC,EAAA,EAAAjC,CAAA,OAAHkC,OAAA,aAAGlC,CAAH,aACE,SAAAD,GAAK,OAAIA,EAAMkD,MAAMoE,UADvB,mDAIU,SAAAtH,GAAK,OAAIA,EAAMkD,MAAMM,YAAY8F,GAJ3C,wBCFb4B,EAAAC,EAAAC,EAAA,sBAAAZ,IAAAU,EAAAC,EAAAC,EAAA,sBAAAC,KAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAb,IAAAW,EAAAC,EAAAC,EAAA,sBAAAG,KAAAL,EAAAC,EAAAC,EAAA,sBAAAI,KAAAN,EAAAC,EAAAC,EAAA,sBAAAK,KAAAP,EAAAC,EAAAC,EAAA,sBAAAM,yBCAA,IAAsBpC,EAKpBqC,EAAOC,SALatC,EAKWuC,EAAQ,OALRvC,EAAEwC,SAAYxC,oGCMzCyC,EAAmB,SAAA1H,GAAkB,IAAf2H,EAAe3H,EAAf2H,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAAS9H,UAClE,OAAOrE,IAAMuM,cAAcC,IAApBpM,OAAAqM,OAAA,CACLN,WACAC,iBACGA,EAAcM,QAIrBR,EAAiBpL,UAAY,CAC3BqL,SAAUpL,IAAU4L,MAAM,CACxBtI,SAAUtD,IAAUE,OAAOC,aAC1BA,YAGUgL","file":"1-41ecbfbedec2e1cfa645.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'gatsby';\r\nimport kebabCase from 'lodash/kebabCase';\r\n\r\nexport default class Categories extends Component {\r\n  render() {\r\n    const { categories } = this.props;\r\n    return (\r\n      <>\r\n        {categories.map((cat, i) => (\r\n          <React.Fragment key={cat}>\r\n            {!!i && ', '}\r\n            <Link to={`/categories/${kebabCase(cat)}`}>{cat}</Link>\r\n          </React.Fragment>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nCategories.propTypes = {\r\n  categories: PropTypes.array.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\nimport { ListItem } from 'components/Listing';\r\n\r\nconst List = styled.ul`\r\n  margin-top: 4rem;\r\n  margin-bottom: 4rem;\r\n  list-style-type: none;\r\n  margin-left: 0;\r\n`;\r\n\r\nexport default class Listing extends Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n    return (\r\n      <List>\r\n        {posts.map(post => {\r\n          let categories = false;\r\n          if (post.node.data.categories[0].category) {\r\n            categories = post.node.data.categories.map(c => c.category.document[0].data.name);\r\n          }\r\n          return <ListItem key={post.node.uid} node={post.node} categories={categories} />;\r\n        })}\r\n      </List>\r\n    );\r\n  }\r\n}\r\n\r\nListing.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\nimport { Link } from 'gatsby';\r\nimport { Categories } from 'components/Listing';\r\n\r\nconst Item = styled.li`\r\n  margin-bottom: 1.45rem;\r\n`;\r\n\r\nconst Headline = styled.p`\r\n  font-family: 'Source Sans Pro', -apple-system, 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica', 'Arial',\r\n    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\r\n  color: ${props => props.theme.colors.grey};\r\n  margin-bottom: 0;\r\n  a {\r\n    color: ${props => props.theme.colors.grey};\r\n    font-style: normal;\r\n    font-weight: normal;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  font-size: 2.369rem;\r\n  color: ${props => props.theme.colors.black};\r\n  font-style: normal;\r\n  @media (max-width: ${props => props.theme.breakpoints.s}) {\r\n    font-size: 1.777rem;\r\n  }\r\n`;\r\n\r\nexport default class ListItem extends Component {\r\n  render() {\r\n    const { node, categories } = this.props;\r\n    return (\r\n      <Item>\r\n        <Headline>\r\n          {node.data.date} — {categories && <Categories categories={categories} />}\r\n        </Headline>\r\n        <StyledLink to={node.uid}>{node.data.title.text}</StyledLink>\r\n      </Item>\r\n    );\r\n  }\r\n}\r\n\r\nListItem.propTypes = {\r\n  node: PropTypes.object.isRequired,\r\n  categories: PropTypes.array.isRequired,\r\n};\r\n","import Categories from './Categories';\r\nimport Listing from './Listing';\r\nimport ListItem from './ListItem';\r\n\r\nexport { Categories, ListItem };\r\n\r\nexport default Listing;\r\n","import React, { Component } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport { Facebook, Twitter } from 'components/SEO';\r\n\r\n// Complete tutorial: https://www.gatsbyjs.org/docs/add-seo-component/\r\n\r\nexport default class SEO extends Component {\r\n  render() {\r\n    const { title, desc, banner, pathname, article } = this.props;\r\n    return (\r\n      <StaticQuery\r\n        query={query}\r\n        render={({\r\n          site: {\r\n            buildTime,\r\n            siteMetadata: {\r\n              defaultTitle,\r\n              titleAlt,\r\n              shortName,\r\n              author,\r\n              siteLanguage,\r\n              logo,\r\n              siteUrl,\r\n              pathPrefix,\r\n              defaultDescription,\r\n              defaultBanner,\r\n              twitter,\r\n            },\r\n          },\r\n        }) => {\r\n          const seo = {\r\n            title: title || defaultTitle,\r\n            description: defaultDescription || desc,\r\n            image: `${siteUrl}${banner || defaultBanner}`,\r\n            url: `${siteUrl}${pathname || '/'}`,\r\n          };\r\n\r\n          const realPrefix = pathPrefix === '/' ? '' : pathPrefix;\r\n\r\n          let schemaOrgJSONLD = [\r\n            {\r\n              '@context': 'http://schema.org',\r\n              '@type': 'WebSite',\r\n              '@id': siteUrl,\r\n              url: siteUrl,\r\n              name: defaultTitle,\r\n              alternateName: titleAlt || '',\r\n            },\r\n          ];\r\n\r\n          if (article) {\r\n            schemaOrgJSONLD = [\r\n              {\r\n                '@context': 'http://schema.org',\r\n                '@type': 'BlogPosting',\r\n                '@id': seo.url,\r\n                url: seo.url,\r\n                name: title,\r\n                alternateName: titleAlt || '',\r\n                headline: title,\r\n                image: {\r\n                  '@type': 'ImageObject',\r\n                  url: seo.image,\r\n                },\r\n                description: seo.description,\r\n                datePublished: buildTime,\r\n                dateModified: buildTime,\r\n                author: {\r\n                  '@type': 'Person',\r\n                  name: author,\r\n                },\r\n                publisher: {\r\n                  '@type': 'Organization',\r\n                  name: author,\r\n                  logo: {\r\n                    '@type': 'ImageObject',\r\n                    url: siteUrl + realPrefix + logo,\r\n                  },\r\n                },\r\n                isPartOf: siteUrl,\r\n                mainEntityOfPage: {\r\n                  '@type': 'WebSite',\r\n                  '@id': siteUrl,\r\n                },\r\n              },\r\n            ];\r\n          }\r\n\r\n          return (\r\n            <>\r\n              <Helmet title={seo.title}>\r\n                <html lang={siteLanguage} />\r\n                <meta name=\"description\" content={seo.description} />\r\n                <meta name=\"image\" content={seo.image} />\r\n                <meta name=\"apple-mobile-web-app-title\" content={shortName} />\r\n                <meta name=\"application-name\" content={shortName} />\r\n                <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\r\n              </Helmet>\r\n              <Facebook\r\n                desc={seo.description}\r\n                image={seo.image}\r\n                title={seo.title}\r\n                type={article ? 'article' : null}\r\n                url={seo.url}\r\n              />\r\n              <Twitter title={seo.title} image={seo.image} desc={seo.description} username={twitter} />\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSEO.propTypes = {\r\n  title: PropTypes.string,\r\n  desc: PropTypes.string,\r\n  banner: PropTypes.string,\r\n  pathname: PropTypes.string,\r\n  article: PropTypes.bool,\r\n};\r\n\r\nSEO.defaultProps = {\r\n  title: null,\r\n  desc: null,\r\n  banner: null,\r\n  pathname: null,\r\n  article: false,\r\n};\r\n\r\nconst query = graphql`\r\n  query SEO {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD\")\r\n      siteMetadata {\r\n        defaultTitle: title\r\n        titleAlt\r\n        shortName\r\n        author\r\n        siteLanguage\r\n        logo\r\n        siteUrl: url\r\n        pathPrefix\r\n        defaultDescription: description\r\n        defaultBanner: banner\r\n        twitter\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nconst Facebook = ({ url, type, title, desc, image }) => (\r\n  <Helmet>\r\n    {url && <meta property=\"og:url\" content={url} />}\r\n    {type && <meta property=\"og:type\" content={type} />}\r\n    {title && <meta property=\"og:title\" content={title} />}\r\n    {desc && <meta property=\"og:description\" content={desc} />}\r\n    {image && <meta property=\"og:image\" content={image} />}\r\n  </Helmet>\r\n);\r\n\r\nexport default Facebook;\r\n\r\nFacebook.propTypes = {\r\n  url: PropTypes.string,\r\n  type: PropTypes.string,\r\n  title: PropTypes.string,\r\n  desc: PropTypes.string,\r\n  image: PropTypes.string,\r\n};\r\n\r\nFacebook.defaultProps = {\r\n  url: null,\r\n  type: null,\r\n  title: null,\r\n  desc: null,\r\n  image: null,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nconst Twitter = ({ type, username, title, desc, image }) => (\r\n  <Helmet>\r\n    <meta name=\"twitter:card\" content={type} />\r\n    {username && <meta name=\"twitter:creator\" content={username} />}\r\n    {title && <meta name=\"twitter:title\" content={title} />}\r\n    {desc && <meta name=\"twitter:description\" content={desc} />}\r\n    {image && <meta name=\"twitter:image\" content={image} />}\r\n  </Helmet>\r\n);\r\n\r\nexport default Twitter;\r\n\r\nTwitter.propTypes = {\r\n  type: PropTypes.string,\r\n  username: PropTypes.string,\r\n  title: PropTypes.string,\r\n  desc: PropTypes.string,\r\n  image: PropTypes.string,\r\n};\r\n\r\nTwitter.defaultProps = {\r\n  type: 'summary_large_image',\r\n  username: null,\r\n  title: null,\r\n  desc: null,\r\n  image: null,\r\n};\r\n","import SEO from './SEO';\r\nimport Facebook from './Facebook';\r\nimport Twitter from './Twitter';\r\n\r\nexport { Facebook, Twitter };\r\n\r\nexport default SEO;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst StyledFooter = styled.footer`\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 6rem auto 0 auto;\r\n  padding: 2rem;\r\n  color: ${props => props.theme.colors.grey};\r\n`;\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <StyledFooter>{children}</StyledFooter>;\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n\r\nFooter.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'gatsby';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst StyledHeader = styled.header`\r\n  padding-bottom: 2rem;\r\n  a {\r\n    color: ${props => (props.invert ? props.theme.colors.greyLight : props.theme.colors.greyDark)};\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    font-family: 'Source Sans Pro', -apple-system, 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica', 'Arial',\r\n      sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\r\n  }\r\n`;\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { invert } = this.props;\r\n    return (\r\n      <StyledHeader invert={invert}>\r\n        <Link to=\"/\">Simon Yu</Link>\r\n      </StyledHeader>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n  invert: PropTypes.bool,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  invert: false,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst Content = styled.div`\r\n  max-width: ${props => props.theme.maxWidthText};\r\n`;\r\n\r\nconst BodyText = ({ input }) => <Content dangerouslySetInnerHTML={{ __html: input.primary.text.html }} />;\r\n\r\nexport default BodyText;\r\n\r\nBodyText.propTypes = {\r\n  input: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport styled from '@emotion/styled/macro';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Content = styled.div`\r\n  padding-bottom: 2rem;\r\n  max-width: ${props => props.theme.maxWidthText};\r\n`;\r\n\r\nconst CodeBlock = ({ input }) => <Content dangerouslySetInnerHTML={{ __html: input.primary.code_block.html }} />;\r\n\r\nexport default CodeBlock;\r\n\r\nCodeBlock.propTypes = {\r\n  input: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\nimport Img from 'gatsby-image';\r\n\r\nconst Content = styled.div`\r\n  padding-top: 1.5rem;\r\n  padding-bottom: 1.5rem;\r\n`;\r\n\r\nconst Image = ({ input }) => (\r\n  <Content>\r\n    <Img fluid={input.primary.image.localFile.childImageSharp.fluid} />\r\n  </Content>\r\n);\r\n\r\nexport default Image;\r\n\r\nImage.propTypes = {\r\n  input: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst BlockQuote = styled.blockquote`\r\n  max-width: ${props => props.theme.maxWidthText};\r\n`;\r\n\r\nconst Quote = ({ input }) => (\r\n  <BlockQuote>\r\n    <div dangerouslySetInnerHTML={{ __html: input.primary.quote.html }} />\r\n  </BlockQuote>\r\n);\r\n\r\nexport default Quote;\r\n\r\nQuote.propTypes = {\r\n  input: PropTypes.object.isRequired,\r\n};\r\n","import css from '@emotion/css/macro';\r\n\r\nconst prism = css`\r\n  code[class*='language-'],\r\n  pre[class*='language-'] {\r\n    font-family: Consolas, Menlo, Monaco, 'Andale Mono WT', 'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter',\r\n      'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L', 'Courier New', Courier,\r\n      monospace;\r\n    font-size: 14px;\r\n    line-height: 1.375;\r\n    direction: ltr;\r\n    text-align: left;\r\n    white-space: pre;\r\n    word-spacing: normal;\r\n    word-break: normal;\r\n    -moz-tab-size: 4;\r\n    -o-tab-size: 4;\r\n    tab-size: 4;\r\n    -webkit-hyphens: none;\r\n    -moz-hyphens: none;\r\n    -ms-hyphens: none;\r\n    hyphens: none;\r\n    background: #f5f7ff;\r\n    color: #5e6687;\r\n  }\r\n\r\n  pre[class*='language-']::-moz-selection,\r\n  pre[class*='language-'] ::-moz-selection,\r\n  code[class*='language-']::-moz-selection,\r\n  code[class*='language-'] ::-moz-selection {\r\n    text-shadow: none;\r\n    background: #dfe2f1;\r\n  }\r\n\r\n  pre[class*='language-']::selection,\r\n  pre[class*='language-'] ::selection,\r\n  code[class*='language-']::selection,\r\n  code[class*='language-'] ::selection {\r\n    text-shadow: none;\r\n    background: #dfe2f1;\r\n  }\r\n\r\n  /* Code blocks */\r\n  pre[class*='language-'] {\r\n    padding: 1em;\r\n    margin: 0.5em 0;\r\n    overflow: auto;\r\n  }\r\n\r\n  /* Inline code */\r\n  :not(pre) > code[class*='language-'] {\r\n    padding: 0.1em;\r\n    border-radius: 0.3em;\r\n  }\r\n\r\n  .token.comment,\r\n  .token.prolog,\r\n  .token.doctype,\r\n  .token.cdata {\r\n    color: #898ea4;\r\n  }\r\n\r\n  .token.punctuation {\r\n    color: #5e6687;\r\n  }\r\n\r\n  .token.namespace {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  .token.operator,\r\n  .token.boolean,\r\n  .token.number {\r\n    color: #c76b29;\r\n  }\r\n\r\n  .token.property {\r\n    color: #c08b30;\r\n  }\r\n\r\n  .token.tag {\r\n    color: #3d8fd1;\r\n  }\r\n\r\n  .token.string {\r\n    color: #22a2c9;\r\n  }\r\n\r\n  .token.selector {\r\n    color: #6679cc;\r\n  }\r\n\r\n  .token.attr-name {\r\n    color: #c76b29;\r\n  }\r\n\r\n  .token.entity,\r\n  .token.url,\r\n  .language-css .token.string,\r\n  .style .token.string {\r\n    color: #22a2c9;\r\n  }\r\n\r\n  .token.attr-value,\r\n  .token.keyword,\r\n  .token.control,\r\n  .token.directive,\r\n  .token.unit {\r\n    color: #ac9739;\r\n  }\r\n\r\n  .token.statement,\r\n  .token.regex,\r\n  .token.atrule {\r\n    color: #22a2c9;\r\n  }\r\n\r\n  .token.placeholder,\r\n  .token.variable {\r\n    color: #3d8fd1;\r\n  }\r\n\r\n  .token.deleted {\r\n    text-decoration: line-through;\r\n  }\r\n\r\n  .token.inserted {\r\n    border-bottom: 1px dotted #202746;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .token.italic {\r\n    font-style: italic;\r\n  }\r\n\r\n  .token.important,\r\n  .token.bold {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .token.important {\r\n    color: #c94922;\r\n  }\r\n\r\n  .token.entity {\r\n    cursor: help;\r\n  }\r\n\r\n  pre > code.highlight {\r\n    outline: 0.4em solid #c94922;\r\n    outline-offset: 0.4em;\r\n  }\r\n  .line-numbers .line-numbers-rows {\r\n    border-right-color: #dfe2f1;\r\n  }\r\n\r\n  .line-numbers-rows > span:before {\r\n    color: #979db4;\r\n  }\r\n`;\r\n\r\nexport default prism;\r\n","const theme = {\r\n  colors: {\r\n    primary: '#3D63AE',\r\n    bg: '#fff',\r\n    black: '#000',\r\n    greyLight: '#EBEDF2',\r\n    greyBlue: '#a2bce2',\r\n    grey: '#595C62',\r\n    greyDark: '#303643',\r\n    greyDarker: '#1c252b',\r\n  },\r\n  maxWidth: '1000px',\r\n  maxWidthText: '720px',\r\n  breakpoints: {\r\n    xs: '400px',\r\n    s: '600px',\r\n    m: '900px',\r\n    l: '1200px',\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import css from '@emotion/css/macro';\r\n\r\nconst reset = css`\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n  html {\r\n    text-rendering: optimizeLegibility;\r\n    overflow-x: hidden;\r\n    box-sizing: border-box;\r\n    -ms-overflow-style: scrollbar;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  }\r\n  [tabindex='-1']:focus {\r\n    outline: none !important;\r\n  }\r\n  pre {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n    overflow: auto;\r\n  }\r\n  figure {\r\n    margin: 0 0 1rem 0;\r\n  }\r\n  img {\r\n    vertical-align: middle;\r\n  }\r\n  [role='button'] {\r\n    cursor: pointer;\r\n  }\r\n  a,\r\n  area,\r\n  button,\r\n  [role='button'],\r\n  input,\r\n  label,\r\n  select,\r\n  summary,\r\n  textarea {\r\n    touch-action: manipulation;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    background-color: #fff;\r\n  }\r\n  caption {\r\n    padding-top: 1.5rem;\r\n    padding-bottom: 1.5rem;\r\n    color: #fff;\r\n    text-align: center;\r\n    caption-side: bottom;\r\n  }\r\n  th {\r\n    text-align: left;\r\n  }\r\n  label {\r\n    display: inline-block;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  button:focus {\r\n    outline: 1px dotted;\r\n    outline: 5px auto -webkit-focus-ring-color;\r\n  }\r\n  input,\r\n  button,\r\n  select,\r\n  textarea {\r\n    line-height: inherit;\r\n  }\r\n  input[type='date'],\r\n  input[type='time'],\r\n  input[type='datetime-local'],\r\n  input[type='month'] {\r\n    -webkit-appearance: listbox;\r\n  }\r\n  textarea {\r\n    resize: vertical;\r\n  }\r\n  fieldset {\r\n    min-width: 0;\r\n    padding: 0;\r\n    margin: 0;\r\n    border: 0;\r\n  }\r\n  legend {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1.5rem;\r\n    line-height: inherit;\r\n  }\r\n  input[type='search'] {\r\n    -webkit-appearance: none;\r\n  }\r\n  output {\r\n    display: inline-block;\r\n  }\r\n  svg:not(:root) {\r\n    overflow: hidden;\r\n    vertical-align: middle;\r\n  }\r\n  [hidden] {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nexport default reset;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BodyText, CodeBlock, Image, Quote } from 'slices';\r\nimport styled from '@emotion/styled/macro';\r\nimport { prism } from 'styles';\r\n\r\nconst Content = styled.div`\r\n  ${prism};\r\n  padding: 6rem 0;\r\n  p,\r\n  li {\r\n    letter-spacing: -0.003em;\r\n    --baseline-multiplier: 0.179;\r\n    --x-height-multiplier: 0.35;\r\n    font-size: 21px;\r\n    line-height: 1.58;\r\n    code {\r\n      padding: 0.2rem 0.5rem;\r\n      margin: 0.5rem 0;\r\n    }\r\n  }\r\n  blockquote {\r\n    margin-left: 0;\r\n    padding-left: 1.45rem;\r\n    border-left: 2px solid ${props => props.theme.colors.primary};\r\n    p {\r\n      font-size: 19px;\r\n      font-style: italic;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class SliceZone extends Component {\r\n  render() {\r\n    const { allSlices } = this.props;\r\n    const slice = allSlices.map(s => {\r\n      switch (s.slice_type) {\r\n        // These are the API IDs of the slices\r\n        case 'text':\r\n          return <BodyText key={s.id} input={s} />;\r\n        case 'code_block':\r\n          return <CodeBlock key={s.id} input={s} />;\r\n        case 'image':\r\n          return <Image key={s.id} input={s} />;\r\n        case 'quote':\r\n          return <Quote key={s.id} input={s} />;\r\n        default:\r\n          return null;\r\n      }\r\n    });\r\n    return <Content>{slice}</Content>;\r\n  }\r\n}\r\n\r\nSliceZone.propTypes = {\r\n  allSlices: PropTypes.array.isRequired,\r\n};\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst Title = styled.p`\r\n  font-style: italic;\r\n  font-size: 1.4444rem;\r\n  position: relative;\r\n  &:before {\r\n    content: '';\r\n    width: 3rem;\r\n    height: 1px;\r\n    background-color: ${props => props.theme.colors.grey};\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: -80px;\r\n  }\r\n  @media (max-width: ${props => props.theme.breakpoints.l}) {\r\n    &:before {\r\n      width: 1.5rem;\r\n      left: -40px;\r\n    }\r\n  }\r\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\r\n    &:before {\r\n      width: 1.5rem;\r\n      left: -35px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Title;\r\n","/* eslint no-unused-expressions: 0 */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport { injectGlobal } from 'emotion/macro';\r\nimport { ThemeProvider } from 'emotion-theming';\r\nimport 'typeface-lora';\r\nimport 'typeface-source-sans-pro';\r\nimport { Footer, SEO } from 'components';\r\nimport { theme, reset } from 'styles';\r\n\r\ninjectGlobal`\r\n  ${reset}\r\n  h1, h2, h3, h4, h5, h6 {\r\n    color: ${theme.colors.black};\r\n  }\r\n  html {\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  body {\r\n    color: ${theme.colors.greyDarker};\r\n    background-color: ${theme.colors.bg};\r\n  }\r\n  ::selection {\r\n    color: ${theme.colors.bg};\r\n    background-color: ${theme.colors.primary};\r\n  }\r\n  a {\r\n    color: ${theme.colors.primary};\r\n    transition: all 0.4s ease-in-out;\r\n    text-decoration: none;\r\n    font-weight: 700;\r\n    font-style: italic;\r\n    &:hover, &:focus {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n  @media (max-width: ${theme.breakpoints.m}) {\r\n    html {\r\n      font-size: 16px !important;\r\n    }\r\n  }\r\n  @media (max-width: ${theme.breakpoints.s}) {\r\n    h1 {\r\n      font-size: 2.369rem !important;\r\n    }\r\n    h2 {\r\n      font-size: 1.777rem !important;\r\n    }\r\n    h3 {\r\n      font-size: 1.333rem !important;\r\n    }\r\n    h4 {\r\n      font-size: 1rem !important;\r\n    }\r\n    h5 {\r\n      font-size: 0.75rem !important;\r\n    }\r\n    h6 {\r\n      font-size: 0.563rem !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PureLayout = ({ children, data }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <>\r\n      <SEO />\r\n      {children}\r\n      <Footer>\r\n        <div dangerouslySetInnerHTML={{ __html: data.prismicHomepage.data.footer.html }} />\r\n      </Footer>\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n          query LayoutQuery {\r\n            prismicHomepage {\r\n              data {\r\n                footer {\r\n                  html\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `}\r\n        render={data => <PureLayout {...this.props} data={data} />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n\r\nPureLayout.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\r\n    padding: 0 1.5rem;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import Listing from './Listing';\r\nimport SEO from './SEO';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport SliceZone from './SliceZone';\r\nimport Title from './Title';\r\nimport Layout from './Layout';\r\nimport Wrapper from './Wrapper';\r\n\r\nexport { Footer, Layout, Listing, SEO, Wrapper, SliceZone, Title, Header };\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}