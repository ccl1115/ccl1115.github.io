{"version":3,"sources":["webpack:///./src/templates/post.jsx","webpack:///./config/website.js"],"names":["Hero","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","props","theme","colors","greyLight","Headline","grey","Post","_ref","_ref$data","data","prismicPost","posts","location","categories","category","map","c","document","name","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","components__WEBPACK_IMPORTED_MODULE_5__","title","text","website","_title","pathname","article","date","_components_Listing_Categories__WEBPACK_IMPORTED_MODULE_6__","allSlices","body","style","marginTop","edges","propTypes","PropTypes","shape","object","isRequired","pageQuery","module","exports","_pathPrefix","_titleAlt","description","_url","siteLanguage","logo","favicon","shortName","author","themeColor","backgroundColor","twitter"],"mappings":"+NAQMA,EAAOC,OAAAC,EAAA,EAAAD,CAAA,WAAHE,OAAA,WAAGF,CAAH,oBACY,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WADxC,0CAMJC,EAAWP,OAAAC,EAAA,EAAAD,CAAA,KAAHE,OAAA,WAAGF,CAAH,oLAGH,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,MAHzB,+DAWRC,EAAO,SAAAC,GAAgD,IAAAC,EAAAD,EAA7CE,KAAQC,EAAqCF,EAArCE,YAAaC,EAAwBH,EAAxBG,MAASC,EAAeL,EAAfK,SACpCH,EAASC,EAATD,KACJI,GAAa,EAIjB,OAHIJ,EAAKI,WAAW,GAAGC,WACrBD,EAAaJ,EAAKI,WAAWE,IAAI,SAAAC,GAAC,OAAIA,EAAEF,SAASG,SAAS,GAAGR,KAAKS,QAGlErB,OAAAsB,EAAA,IAAAtB,CAACuB,EAAA,EAAD,KACEvB,OAAAsB,EAAA,IAAAtB,CAACuB,EAAA,EAAD,CAAKC,MAAUZ,EAAKY,MAAMC,KAAhB,MAA0BC,IAAQC,OAAUC,SAAUb,EAASa,SAAUC,SAAO,IAC1F7B,OAAAsB,EAAA,IAAAtB,CAACD,EAAD,KACEC,OAAAsB,EAAA,IAAAtB,CAACuB,EAAA,EAAD,KACEvB,OAAAsB,EAAA,IAAAtB,CAACuB,EAAA,EAAD,MACAvB,OAAAsB,EAAA,IAAAtB,CAACO,EAAD,KACGK,EAAKkB,KADR,MACiBd,GAAchB,OAAAsB,EAAA,IAAAtB,CAAC+B,EAAA,EAAD,CAAYf,WAAYA,KAEvDhB,OAAAsB,EAAA,IAAAtB,CAAA,UAAKY,EAAKY,MAAMC,QAGpBzB,OAAAsB,EAAA,IAAAtB,CAACuB,EAAA,EAAD,KACEvB,OAAAsB,EAAA,IAAAtB,CAACuB,EAAA,EAAD,CAAWS,UAAWpB,EAAKqB,OAC3BjC,OAAAsB,EAAA,IAAAtB,CAACuB,EAAA,EAAD,CAAOW,MAAO,CAAEC,UAAW,SAA3B,gBACAnC,OAAAsB,EAAA,IAAAtB,CAACuB,EAAA,EAAD,CAAST,MAAOA,EAAMsB,WAMf3B,YAEfA,EAAK4B,UAAY,CACfzB,KAAM0B,IAAUC,MAAM,CACpB1B,YAAayB,IAAUE,OAAOC,aAC7BA,WACH1B,SAAUuB,IAAUE,OAAOC,YAMtB,IAAMC,EAAS,gCChEtBC,EAAOC,QAAU,CACfC,YAAa,IACblB,OAAQ,WACRmB,UAAW,kBACXC,YAAa,kFACbC,KAAM,4BACNC,aAAc,KACdC,KAAM,uBAGNC,QAAS,kBACTC,UAAW,UACXC,OAAQ,WACRC,WAAY,UACZC,gBAAiB,UAEjBC,QAAS","file":"component---src-templates-post-jsx-62caf6f785c9e23b8130.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { graphql } from 'gatsby';\r\nimport styled from '@emotion/styled/macro';\r\nimport { Layout, Listing, Wrapper, SliceZone, Title, SEO, Header } from 'components';\r\nimport Categories from '../components/Listing/Categories';\r\nimport website from '../../config/website';\r\n\r\nconst Hero = styled.section`\r\n  background-color: ${props => props.theme.colors.greyLight};\r\n  padding-top: 1rem;\r\n  padding-bottom: 4rem;\r\n`;\r\n\r\nconst Headline = styled.p`\r\n  font-family: 'Source Sans Pro', -apple-system, 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica', 'Arial',\r\n    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\r\n  color: ${props => props.theme.colors.grey};\r\n  font-size: 1.25rem;\r\n  a {\r\n    font-style: normal;\r\n    font-weight: normal;\r\n  }\r\n`;\r\n\r\nconst Post = ({ data: { prismicPost, posts }, location }) => {\r\n  const { data } = prismicPost;\r\n  let categories = false;\r\n  if (data.categories[0].category) {\r\n    categories = data.categories.map(c => c.category.document[0].data.name);\r\n  }\r\n  return (\r\n    <Layout>\r\n      <SEO title={`${data.title.text} | ${website._title}`} pathname={location.pathname} article />\r\n      <Hero>\r\n        <Wrapper>\r\n          <Header />\r\n          <Headline>\r\n            {data.date} â€” {categories && <Categories categories={categories} />}\r\n          </Headline>\r\n          <h1>{data.title.text}</h1>\r\n        </Wrapper>\r\n      </Hero>\r\n      <Wrapper>\r\n        <SliceZone allSlices={data.body} />\r\n        <Title style={{ marginTop: '4rem' }}>Recent posts</Title>\r\n        <Listing posts={posts.edges} />\r\n      </Wrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\nPost.propTypes = {\r\n  data: PropTypes.shape({\r\n    prismicPost: PropTypes.object.isRequired,\r\n  }).isRequired,\r\n  location: PropTypes.object.isRequired,\r\n};\r\n\r\n// The typenames come from the slice names\r\n// If this doesn't work for you query for __typename in body {} and GraphiQL will show them to you\r\n\r\nexport const pageQuery = graphql`\r\n  query PostBySlug($uid: String!) {\r\n    prismicPost(uid: { eq: $uid }) {\r\n      uid\r\n      data {\r\n        title {\r\n          text\r\n        }\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        categories {\r\n          category {\r\n            document {\r\n              data {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        }\r\n        body {\r\n          ... on PrismicPostBodyText {\r\n            slice_type\r\n            id\r\n            primary {\r\n              text {\r\n                html\r\n              }\r\n            }\r\n          }\r\n          ... on PrismicPostBodyCodeBlock {\r\n            slice_type\r\n            id\r\n            primary {\r\n              code_block {\r\n                html\r\n              }\r\n            }\r\n          }\r\n          ... on PrismicPostBodyQuote {\r\n            slice_type\r\n            id\r\n            primary {\r\n              quote {\r\n                html\r\n                text\r\n              }\r\n            }\r\n          }\r\n          ... on PrismicPostBodyImage {\r\n            slice_type\r\n            id\r\n            primary {\r\n              image {\r\n                localFile {\r\n                  childImageSharp {\r\n                    fluid(maxWidth: 1200, quality: 90) {\r\n                      ...GatsbyImageSharpFluid_withWebp\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    posts: allPrismicPost(limit: 2, sort: { fields: [data___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          uid\r\n          data {\r\n            title {\r\n              text\r\n            }\r\n            date(formatString: \"DD.MM.YYYY\")\r\n            categories {\r\n              category {\r\n                document {\r\n                  data {\r\n                    name\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","module.exports = {\n  _pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n  _title: 'Simon Yu', // Navigation and Site Title\n  _titleAlt: 'Prismic Starter', // Title for JSONLD\n  description: 'A bright single-page portfolio starter with big typography & images for Gatsby.',\n  _url: 'https://ccl1115.github.io', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  logo: '/logos/logo-1024.png', // Used for SEO\n\n  // JSONLD / Manifest\n  favicon: 'src/favicon.png', // Used for manifest favicon generation\n  shortName: 'SimonYu', // shortname for manifest. MUST be shorter than 12 characters\n  author: 'LekoArts', // Author for schemaORGJSONLD\n  themeColor: '#3D63AE',\n  backgroundColor: '#EBEDF2',\n\n  twitter: '@starter_prismicio', // Twitter Username\n};\n"],"sourceRoot":""}